name: E2E Tests
description: Runs e2e tests
runs:
  using: "composite"
  steps:
     - name: Setup Golang
       uses: actions/setup-go@v1
       with:
         go-version: ${{ env.GOLANG_VERSION }}
     - name: GH actions workaround - Kill XSP4 process
       run: |
         sudo pkill mono || true
       shell: bash
     - name: Install K3S
       env:
         INSTALL_K3S_VERSION: ${{ matrix.k3s-version }}+k3s1
       run: |
         set -x
         curl -sfL https://get.k3s.io | sh -
         sudo chmod -R a+rw /etc/rancher/k3s
         sudo mkdir -p $HOME/.kube && sudo chown -R runner $HOME/.kube
         sudo k3s kubectl config view --raw > $HOME/.kube/config
         sudo chown runner $HOME/.kube/config
         kubectl version
       shell: bash
     - name: Restore go build cache
       uses: actions/cache@v1
       with:
         path: ~/.cache/go-build
         key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
     - name: Add ~/go/bin to PATH
       run: |
         echo "/home/runner/go/bin" >> $GITHUB_PATH
       shell: bash
     - name: Add /usr/local/bin to PATH
       run: |
         echo "/usr/local/bin" >> $GITHUB_PATH
       shell: bash
     - name: Download Go dependencies
       run: |
         go mod download
         go get github.com/mattn/goreman
       shell: bash
     - name: Install all tools required for building & testing
       run: |
         make install-test-tools-local
       shell: bash
     - name: Setup git username and email
       run: |
         git config --global user.name "John Doe"
         git config --global user.email "john.doe@example.com"
       shell: bash
     - name: Pull Docker image required for tests
       run: |
         docker pull quay.io/dexidp/dex:v2.25.0
         docker pull argoproj/argo-cd-ci-builder:v1.0.0
         docker pull redis:6.2.4-alpine
       shell: bash
     - name: Create target directory for binaries in the build-process
       run: |
         mkdir -p dist
         chown runner dist
       shell: bash
     - name: Run E2E server and wait for it being available
       run: |
         set -x
         # Something is weird in GH runners -- there's a phantom listener for
         # port 8080 which is not visible in netstat -tulpen, but still there
         # with a HTTP listener. We have API server listening on port 8088
         # instead.
         make start-e2e-local 2>&1 | sed -r "s/[[:cntrl:]]\[[0-9]{1,3}m//g" > /tmp/e2e-server.log &
         count=1
         until curl -f http://127.0.0.1:8088/healthz; do
           sleep 10;
           if test $count -ge 60; then
             echo "Timeout"
             exit 1
           fi
           count=$((count+1))
         done
       shell: bash
     - name: Run E2E testsuite
       run: |
         set -x
         make test-e2e-local
       shell: bash
